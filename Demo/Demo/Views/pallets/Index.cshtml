@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Pallets";
}

<style>
   /*color for chart*/
    .ct-label {
        fill: rgb(255, 255, 255);
        color: rgb(255, 255, 255); 
    }
    .ct-series-a .ct-bar, .ct-series-a .ct-line, .ct-series-a .ct-point, .ct-series-a .ct-slice-donut {
        stroke: #3875e0;
    }

</style>


<div data-role="dialog" id="dialog-place-top-left" class="padding20" data-type="warning" data-close-button="true" data-hide="1500">
</div>

<div id="add_pallet" style="overflow-y: auto;" data-role="charm" data-position="left">
 <h1 class="text-light">Create Pallet</h1>
    <hr />
   
    <form id="add_pallet_form" data-role="validator" 
          data-on-error-input="notifyOnErrorInput"
          data-show-error-hint="false" >
        <label class="block">Pallet Name</label>
        <div class="input-control text">
            <input name="pallet_name" type="text" placeholder="Enter Pallet Name"
                   data-validate-func="required"
                   data-validate-hint="Pallet Name can not be empty!">
            <span class="input-state-error mif-warning"></span>
            <span class="input-state-success mif-checkmark"></span>
        </div>

        <label class="block">Scan or Enter Assets</label>
        <div class="input-control textarea"
             data-role="input" data-text-auto-resize="true">
            <textarea name="assets" data-validate-func="required"
                      data-validate-hint="Asset Tag can not be empty!"
                      ></textarea><span class="input-state-error mif-warning"></span>
<span class="input-state-success mif-checkmark"></span>
        </div>
        <label class="block">Notes (Optional)</label>
        <div class="input-control textarea"
             data-role="input" data-text-auto-resize="true">
            <textarea name="note"></textarea>
        </div>
        <div>
            <button class="button success">Create Pallet</button>
        </div>
    </form>

</div>


<div style="overflow-y: auto;" id='edit_charm' data-role="charm">

    <h1 id="edit_charm_title" type="number" class="text-light"></h1>
    <hr />
    <div class="input-control text">
        <input id="add_asset_txt" type="text" placeholder="Add Asset to this Pallet">
    </div>
    <button id="add_asset" class='cycle-button'><span class='mif-plus'></span></button>
    <table class="table border bordered">
        <thead>
            <tr>
                <th>Asset</th>
                <th>Pallet</th>
                <th>Remove</th>
            </tr>
        </thead>
        <tbody id="edit_body"></tbody>

    </table>
</div>

    <div style="overflow-y: auto;" id='charm' data-role="charm">
        <h1 id="charm_title" class="text-light"></h1>
        <hr />
        <label class="block">Notes</label>
        <div class="input-control textarea"
             data-role="input" data-text-auto-resize="true">
            <textarea readonly id="detail_note"></textarea>
        </div>

        <table class="table border bordered">
            <thead>
                <tr>
                    <th>Brand</th>
                    <th>Count</th>
                </tr>
            </thead>
            <tbody id="brand_body"></tbody>

        </table>
        <br />
        <hr />
        <table class="table border bordered">
            <thead>
                <tr>
                    <th>Model</th>
                    <th>Count</th>
                </tr>
            </thead>
            <tbody id="model_body"></tbody>

        </table>
        <br />
        <hr />
        <table class="table border bordered">
            <thead>
                <tr>
                    <th>CPU</th>
                    <th>Count</th>
                </tr>
            </thead>
            <tbody id="cpu_body"></tbody>

        </table>
        <br />
        <hr />

    </div>


    <h1 class="leader">Pallets</h1>

    <hr />
    <br />
    <button class="command-button primary" onclick="showMetroCharm('#add_pallet')">
        <span class="icon mif-plus"></span>
        Create a new Pallet
        <small>Associate Assets to a Pallet</small>
    </button>
    <div id="loader" data-role="preloader" data-type="metro" data-style="color"></div>
<br />
<br />
<div class="tabcontrol2"  data-role="tabcontrol" data-save-state="true" id="tab1">
    <ul class="tabs">
        <li><a href="#not_ship">Available</a></li>
        
        <li><a href="#shipped">Shipped</a></li>
    </ul>
    <div class="frames">
        <div class="frame" id="not_ship">

            <table class="table striped hovered cell-hovered border bordered">

                <thead>
                    <tr>
                        <th>Pallet Name</th>
                        <th># of Asset</th>
                        <th>Overview</th>
                        <th>Edit</th>
                        <th>Download</th>
                        <th>Delete</th>
                        <th>Shipped</th>
                    </tr>

                </thead>
                <tbody id="pallet_table_body"></tbody>

            </table>


        </div>
        
        <div class="frame" id="shipped">


            <table class="table striped hovered cell-hovered border bordered">

                <thead>
                    <tr>
                        <th>Pallet Name</th>
                        <th># of Asset</th>
                        <th>Overview</th>
                        <th>Edit</th>
                        <th>Download</th>
                        <th>Delete</th>
                        <th>Shipped</th>
                    </tr>

                </thead>
                <tbody id="pallet_table_body_shipped"></tbody>

            </table>

        </div>
    </div>
</div>



    

    <script>

    //init modal
        $('#loader').hide();
    get_table_data();



        $("#add_pallet_form").submit(function (e) {

            $('#loader').show();
            var url = "create"; // the script where you handle the form input.

            $.ajax({
                type: "POST",
                url: url,
                data: $("#add_pallet_form").serialize(), // serializes the form's elements.
                success: function (data) {
                    $('#loader').hide();
                    for (var i = 0; i < data.length; i++) {

                        notify_message(data[i], 3000);

                    }
                    get_table_data();
                    document.getElementById("add_pallet_form").reset();
                }
            });

            e.preventDefault(); // avoid to execute the actual submit of the form.
        });


        function notify_message(content,timeout) {

            $.Notify({
                caption: 'Message',
                content: content,
                icon: "<span class='mif-warning'></span>",
                type: 'info',
                timeout: timeout
            });


        }

        function notifyOnErrorInput(input) {
            var message = input.data('validateHint');
            $.Notify({
                caption: 'Error',
                content: message,
                type: 'alert'
            });
        }



    $('#edit_pallet_list').on('change', function () {
        var pallet = document.getElementById("edit_pallet_list").value;

        var data = {
            pallet : pallet
        };
        $.getJSON("@Url.Action("get_pallet_data")",data, function (data) {
            $('#pallet_asset').val("");
            for (var i = 0; i < data.pallet.length; i++) {

                $('#pallet_asset').val($('#pallet_asset').val() + data.pallet[i] + "\r\n");

            }

        });



    });

    //generate data for table
        function get_table_data() {
            $.getJSON("@Url.Action("get_data")", function (data) {
                var shipped_content = "";
                var content = "";
                $('#edit_pallet_list').html($("<option value='' disabled selected>Choose Pallet</option>"));
                for (var i = 0; i < data.not_shipped.length; i++) {
                    $('#edit_pallet_list').append($("<option></option>").attr("value", data.not_shipped[i].pallet_name).text(data.not_shipped[i].pallet_name));
                    content += "<tr class='pallet_tr'><td>" + data.not_shipped[i].pallet_name + "</td><td>" + data.not_shipped[i].num + "</td><td class='csv-btn'><button class='cycle-button'><span class='mif-search'></span></button></td><td class='csv-btn'><button class='cycle-button'><span class='mif-pencil'></span></button></td><td class='csv-btn'><button class='csv-btn cycle-button'><span class='mif-file-download'></span></button></td><td><button id='remove_pallet' class='cycle-button'><span class='mif-bin'></span></button></td><td><button id='remove_pallet' class='cycle-button'><span class='mif-truck'></span></button></td></tr>";
                }
                for (var i = 0; i < data.shipped.length; i++) {
                    $('#edit_pallet_list').append($("<option></option>").attr("value", data.shipped[i].pallet_name).text(data.shipped[i].pallet_name));
                    shipped_content += "<tr class='pallet_tr'><td>" + data.shipped[i].pallet_name + "</td><td>" + data.shipped[i].num + "</td><td class='csv-btn'><button disabled class='cycle-button'><span class='mif-search'></span></button></td><td class='csv-btn'><button disabled class='cycle-button'><span class='mif-pencil'></span></button></td><td class='csv-btn'><button class='csv-btn cycle-button'><span class='mif-file-download'></span></button></td><td><button id='remove_pallet' class='cycle-button'><span class='mif-bin'></span></button></td><td><span class='mif-checkmark'></span></td></tr>";
                }
                $('#pallet_table_body').html(content)
                $('#pallet_table_body_shipped').html(shipped_content)

            });
        };


         function download_csv_btn (pallet_name){
                var jsonObject = {
                    pallet_name: pallet_name
                };
                $.getJSON("@Url.Action("get_pallet")", jsonObject, function (data) {

                    JSONToCSVConvertor(data, pallet_name + " Report", true);
                });

            }
            //download csv btn
         $("#pallet_table_body").on("click", "td:nth-child(5)", function () {
             var pallet_name = $(this).closest('td').siblings(':nth-child(1)').text();

             download_csv_btn(pallet_name);

         });
         $("#pallet_table_body_shipped").on("click", "td:nth-child(5)", function () {
             var pallet_name = $(this).closest('td').siblings(':nth-child(1)').text();

             download_csv_btn(pallet_name);

         });
             //add asset button
            $('#add_asset').click(function () {


                var pallet_name = sessionStorage.getItem('pallet');
                var asset = $('#add_asset_txt').val();
                var data = {
                    pallet_name : pallet_name, asset:asset
                }

                $.getJSON("@Url.Action("add_asset")", data, function (data) {

                    metroDialog.open('#dialog-place-top-left', 'top-left', ($('<div>').addClass('padding20').html(data)));
                    edit_charm(pallet_name);
                    get_table_data();
                });

            });


             //detail btn
        $("#pallet_table_body").on("click", "td:nth-child(3)", function () {

            var pallet_name = $(this).closest('td').siblings(':nth-child(1)').text();
            sessionStorage.setItem('pallet', pallet_name);
            detail_charm(pallet_name);

        });

        //edit btn
        $("#pallet_table_body").on("click", "td:nth-child(4)", function () {

            var pallet_name = $(this).closest('td').siblings(':nth-child(1)').text();
            sessionStorage.setItem('pallet', pallet_name);
            edit_charm(pallet_name);
            toggleMetroCharm("#edit_charm");


        });




             //delete btn
        $("#pallet_table_body").on("click", "td:nth-child(6)", function () {

            var pallet_name = $(this).closest('td').siblings(':nth-child(1)').text();
            make_diaglog("Delete Pallet " + pallet_name + " ?",pallet_name,"pallet");


        });

        $("#pallet_table_body_shipped").on("click", "td:nth-child(6)", function () {
            var pallet_name = $(this).closest('td').siblings(':nth-child(1)').text();

            make_diaglog("Delete Pallet " + pallet_name + " ?", pallet_name, "pallet");

        });


        //mark shipped button
        $("#pallet_table_body").on("click", "td:nth-child(7)", function () {

            var pallet_name = $(this).closest('td').siblings(':nth-child(1)').text();
            make_diaglog("Mark " + pallet_name + " as shipped ?", pallet_name, "mark");


        });







        //edit charm delete button
        $("#edit_body").on("click", "td:nth-child(3)", function () {

            var asset_name = $(this).closest('td').siblings(':nth-child(1)').text();

            make_diaglog("Delete Asset " + asset_name + " ?",asset_name,"asset");

        });

    function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {
        //If JSONData is not an object then JSON.parse will parse the JSON string in an Object
        var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;

        var CSV = '';
        //Set Report title in first row or line

        CSV += ReportTitle + '\r\n\n';

        //This condition will generate the Label/Header
        if (ShowLabel) {
            var row = "";

            //This loop will extract the label from 1st index of on array
            for (var index in arrData[0]) {

                //Now convert each value to string and comma-seprated
                row += index + ',';
            }

            row = row.slice(0, -1);

            //append Label row with line break
            CSV += row + '\r\n';
        }

        //1st loop is to extract each row
        for (var i = 0; i < arrData.length; i++) {
            var row = "";

            //2nd loop will extract each column and convert it in string comma-seprated
            for (var index in arrData[i]) {
                row += '"' + arrData[i][index] + '",';
            }

            row.slice(0, row.length - 1);

            //add a line break after each row
            CSV += row + '\r\n';
        }

        if (CSV == '') {
            alert("Invalid data");
            return;
        }

        //Generate a file name
        var fileName = "MyReport_";
        //this will remove the blank-spaces from the title and replace it with an underscore
        fileName += ReportTitle.replace(/ /g, "_");

        //Initialize file format you want csv or xls
        var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);

        // Now the little tricky part.
        // you can use either>> window.open(uri);
        // but this will not work in some browsers
        // or you will not get the correct file extension

        //this trick will generate a temp <a /> tag
        var link = document.createElement("a");
        link.href = uri;

        //set the visibility hidden so it will not effect on your web-layout
        link.style = "visibility:hidden";
        link.download = fileName + ".csv";

        //this part will append the anchor tag and remove it after automatic click
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }


         function edit_charm(pallet_name) {

        var data = { pallet: pallet_name };

        $.getJSON("@Url.Action("edit_pallet")", data, function (data) {
            $('#edit_body').html("");

            for (var i = 0; i < data.length; i++) {

                $('#edit_body').append("<tr><td>" + data[i].ictags + "</td><td>" + data[i].pallet_name + "</td><td><button class='cycle-button'><span class='mif-bin'></span></button></td></tr>");

            }

        });


        $('#edit_charm_title').text("Edit " + pallet_name);

    };

    function detail_charm(pallet_name) {

        var data = { pallet_name: pallet_name };

        $.getJSON("@Url.Action("get_pallet_detail")", data, function (data) {
            $('#detail_note').val(data.note);
            $('#cpu_body').html("");
            $('#brand_body').html("");
            $('#model_body').html("");
            for (var i = 0; i < data.cpu_count.length; i++) {

                $('#cpu_body').append("<tr><td>" + data.cpu_count[i].cpu + "</td><td>" + data.cpu_count[i].Count + "</td></tr>");

            }
            for (var i = 0; i < data.brand_count.length; i++) {

                $('#brand_body').append("<tr><td>" + data.brand_count[i].brand + "</td><td>" + data.brand_count[i].Count + "</td></tr>");

            }
            for (var i = 0; i < data.model_count.length; i++) {

                $('#model_body').append("<tr><td>" + data.model_count[i].model + "</td><td>" + data.model_count[i].Count + "</td></tr>");

            }


        });


        $('#charm_title').text("Detail for " + pallet_name);



        toggleMetroCharm("#charm");
    };





    function make_diaglog(title,input,type) {



        function mark_pallet_shipped(pallet) {

            var data = {
                pallet_name: pallet
            }
            $.getJSON("@Url.Action("mark_pallet")", data, function (data) {

                notify_message(data, 3000);
                get_table_data();
            });

        }

        function remove_pallet(pallet) {

            var data = {
                pallet_name : pallet
            }
            $.getJSON("@Url.Action("remove_pallet")", data, function (data) {

                notify_message(data, 3000);
                get_table_data();
            });

        };

        function remove_asset(asset) {

            var data = {
                asset: asset
            }
            $.getJSON("@Url.Action("remove_asset")", data, function (data) {

                notify_message(data, 3000);

                var pallet_name = sessionStorage.getItem('pallet');
                edit_charm(pallet_name);
                get_table_data();
            });
        };

        metroDialog.create({
            title: title,
            content: "",
            actions: [
                {
                    title: "Ok",
                    onclick: function (el) {
                        switch (type) {
                            case ("pallet"):

                                remove_pallet(input);

                            case ("asset"):

                                remove_asset(input);
                            case ("mark"):
                                mark_pallet_shipped(input);
                        }

                        $(el).data('dialog').close();

                    }
                },
                {
                    title: "Cancel",
                    cls: "js-dialog-close"
                }
            ],
            options: { // dialog options

                overlay: true,
                overlayClickClose: true,
                overlayColor: "#ffffff",
                type : "alert",
                width: "600"



            }
        });

    };


    </script>
